//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebCrawler.ASManager {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ASManager.AzureStorageManagerSoap")]
    public interface AzureStorageManagerSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddUrlToQueue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void AddUrlToQueue(string url, string queueReference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddUrlToQueue", ReplyAction="*")]
        System.Threading.Tasks.Task AddUrlToQueueAsync(string url, string queueReference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddLogToQueue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void AddLogToQueue(string log, string queueReference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddLogToQueue", ReplyAction="*")]
        System.Threading.Tasks.Task AddLogToQueueAsync(string log, string queueReference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RetrieveMessageFromQueue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string RetrieveMessageFromQueue(string queueReference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RetrieveMessageFromQueue", ReplyAction="*")]
        System.Threading.Tasks.Task<string> RetrieveMessageFromQueueAsync(string queueReference);
        
        // CODEGEN: Parameter 'CountMessagesInQueueResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CountMessagesInQueue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WebCrawler.ASManager.CountMessagesInQueueResponse CountMessagesInQueue(WebCrawler.ASManager.CountMessagesInQueueRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CountMessagesInQueue", ReplyAction="*")]
        System.Threading.Tasks.Task<WebCrawler.ASManager.CountMessagesInQueueResponse> CountMessagesInQueueAsync(WebCrawler.ASManager.CountMessagesInQueueRequest request);
        
        // CODEGEN: Parameter 'pubDate' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddHTMLDataEntityToTable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WebCrawler.ASManager.AddHTMLDataEntityToTableResponse AddHTMLDataEntityToTable(WebCrawler.ASManager.AddHTMLDataEntityToTableRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddHTMLDataEntityToTable", ReplyAction="*")]
        System.Threading.Tasks.Task<WebCrawler.ASManager.AddHTMLDataEntityToTableResponse> AddHTMLDataEntityToTableAsync(WebCrawler.ASManager.AddHTMLDataEntityToTableRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEntityCount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int GetEntityCount(string PropertyName, string Value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEntityCount", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetEntityCountAsync(string PropertyName, string Value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IncrementPopularityCount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void IncrementPopularityCount(string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IncrementPopularityCount", ReplyAction="*")]
        System.Threading.Tasks.Task IncrementPopularityCountAsync(string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateMachineCountersValue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void UpdateMachineCountersValue(double[] values);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateMachineCountersValue", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateMachineCountersValueAsync(double[] values);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCurrentlyCrawledUrlValue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void UpdateCurrentlyCrawledUrlValue(string threadName, string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCurrentlyCrawledUrlValue", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateCurrentlyCrawledUrlValueAsync(string threadName, string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IncrementNumberOfCrawledUrls", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void IncrementNumberOfCrawledUrls(string rowKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IncrementNumberOfCrawledUrls", ReplyAction="*")]
        System.Threading.Tasks.Task IncrementNumberOfCrawledUrlsAsync(string rowKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateThreadStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void UpdateThreadStatus(string rowKey, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateThreadStatus", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateThreadStatusAsync(string rowKey, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateBlobFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void CreateBlobFile(string blobFileName, string content);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateBlobFile", ReplyAction="*")]
        System.Threading.Tasks.Task CreateBlobFileAsync(string blobFileName, string content);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteAllMessagesFromQueue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DeleteAllMessagesFromQueue(string queueReference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteAllMessagesFromQueue", ReplyAction="*")]
        System.Threading.Tasks.Task DeleteAllMessagesFromQueueAsync(string queueReference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ResetAllNumberOfUrls", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void ResetAllNumberOfUrls();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ResetAllNumberOfUrls", ReplyAction="*")]
        System.Threading.Tasks.Task ResetAllNumberOfUrlsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteBlobContainer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DeleteBlobContainer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteBlobContainer", ReplyAction="*")]
        System.Threading.Tasks.Task DeleteBlobContainerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RecreateBlobContainer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void RecreateBlobContainer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RecreateBlobContainer", ReplyAction="*")]
        System.Threading.Tasks.Task RecreateBlobContainerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteTable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DeleteTable();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteTable", ReplyAction="*")]
        System.Threading.Tasks.Task DeleteTableAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddControlCommandToQueue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void AddControlCommandToQueue(string command);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddControlCommandToQueue", ReplyAction="*")]
        System.Threading.Tasks.Task AddControlCommandToQueueAsync(string command);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RetrieveMachineCounters", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string RetrieveMachineCounters();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RetrieveMachineCounters", ReplyAction="*")]
        System.Threading.Tasks.Task<string> RetrieveMachineCountersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CountUrlInQueues", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CountUrlInQueues();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CountUrlInQueues", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CountUrlInQueuesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CountCrawledUrls", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CountCrawledUrls();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CountCrawledUrls", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CountCrawledUrlsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CountEntitiesInHTMLDataTable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int CountEntitiesInHTMLDataTable();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CountEntitiesInHTMLDataTable", ReplyAction="*")]
        System.Threading.Tasks.Task<int> CountEntitiesInHTMLDataTableAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetThreadName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetThreadName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetThreadName", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetThreadNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetThreadStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetThreadStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetThreadStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetThreadStatusAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCurrentlyCrawledUrl", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCurrentlyCrawledUrl();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCurrentlyCrawledUrl", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCurrentlyCrawledUrlAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RetrieveLogReports", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string RetrieveLogReports();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RetrieveLogReports", ReplyAction="*")]
        System.Threading.Tasks.Task<string> RetrieveLogReportsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RetrieveSearchResults", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string RetrieveSearchResults(string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RetrieveSearchResults", ReplyAction="*")]
        System.Threading.Tasks.Task<string> RetrieveSearchResultsAsync(string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetContentFromBlobFile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetContentFromBlobFile(string blockBlobReference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetContentFromBlobFile", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetContentFromBlobFileAsync(string blockBlobReference);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CountMessagesInQueue", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CountMessagesInQueueRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string queueReference;
        
        public CountMessagesInQueueRequest() {
        }
        
        public CountMessagesInQueueRequest(string queueReference) {
            this.queueReference = queueReference;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CountMessagesInQueueResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CountMessagesInQueueResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CountMessagesInQueueResult;
        
        public CountMessagesInQueueResponse() {
        }
        
        public CountMessagesInQueueResponse(System.Nullable<int> CountMessagesInQueueResult) {
            this.CountMessagesInQueueResult = CountMessagesInQueueResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddHTMLDataEntityToTable", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AddHTMLDataEntityToTableRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string keyWord;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string url;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> pubDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string blobFile;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string title;
        
        public AddHTMLDataEntityToTableRequest() {
        }
        
        public AddHTMLDataEntityToTableRequest(string keyWord, string url, System.Nullable<System.DateTime> pubDate, string blobFile, string title) {
            this.keyWord = keyWord;
            this.url = url;
            this.pubDate = pubDate;
            this.blobFile = blobFile;
            this.title = title;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddHTMLDataEntityToTableResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AddHTMLDataEntityToTableResponse {
        
        public AddHTMLDataEntityToTableResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AzureStorageManagerSoapChannel : WebCrawler.ASManager.AzureStorageManagerSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AzureStorageManagerSoapClient : System.ServiceModel.ClientBase<WebCrawler.ASManager.AzureStorageManagerSoap>, WebCrawler.ASManager.AzureStorageManagerSoap {
        
        public AzureStorageManagerSoapClient() {
        }
        
        public AzureStorageManagerSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AzureStorageManagerSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AzureStorageManagerSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AzureStorageManagerSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddUrlToQueue(string url, string queueReference) {
            base.Channel.AddUrlToQueue(url, queueReference);
        }
        
        public System.Threading.Tasks.Task AddUrlToQueueAsync(string url, string queueReference) {
            return base.Channel.AddUrlToQueueAsync(url, queueReference);
        }
        
        public void AddLogToQueue(string log, string queueReference) {
            base.Channel.AddLogToQueue(log, queueReference);
        }
        
        public System.Threading.Tasks.Task AddLogToQueueAsync(string log, string queueReference) {
            return base.Channel.AddLogToQueueAsync(log, queueReference);
        }
        
        public string RetrieveMessageFromQueue(string queueReference) {
            return base.Channel.RetrieveMessageFromQueue(queueReference);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveMessageFromQueueAsync(string queueReference) {
            return base.Channel.RetrieveMessageFromQueueAsync(queueReference);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WebCrawler.ASManager.CountMessagesInQueueResponse WebCrawler.ASManager.AzureStorageManagerSoap.CountMessagesInQueue(WebCrawler.ASManager.CountMessagesInQueueRequest request) {
            return base.Channel.CountMessagesInQueue(request);
        }
        
        public System.Nullable<int> CountMessagesInQueue(string queueReference) {
            WebCrawler.ASManager.CountMessagesInQueueRequest inValue = new WebCrawler.ASManager.CountMessagesInQueueRequest();
            inValue.queueReference = queueReference;
            WebCrawler.ASManager.CountMessagesInQueueResponse retVal = ((WebCrawler.ASManager.AzureStorageManagerSoap)(this)).CountMessagesInQueue(inValue);
            return retVal.CountMessagesInQueueResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WebCrawler.ASManager.CountMessagesInQueueResponse> WebCrawler.ASManager.AzureStorageManagerSoap.CountMessagesInQueueAsync(WebCrawler.ASManager.CountMessagesInQueueRequest request) {
            return base.Channel.CountMessagesInQueueAsync(request);
        }
        
        public System.Threading.Tasks.Task<WebCrawler.ASManager.CountMessagesInQueueResponse> CountMessagesInQueueAsync(string queueReference) {
            WebCrawler.ASManager.CountMessagesInQueueRequest inValue = new WebCrawler.ASManager.CountMessagesInQueueRequest();
            inValue.queueReference = queueReference;
            return ((WebCrawler.ASManager.AzureStorageManagerSoap)(this)).CountMessagesInQueueAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WebCrawler.ASManager.AddHTMLDataEntityToTableResponse WebCrawler.ASManager.AzureStorageManagerSoap.AddHTMLDataEntityToTable(WebCrawler.ASManager.AddHTMLDataEntityToTableRequest request) {
            return base.Channel.AddHTMLDataEntityToTable(request);
        }
        
        public void AddHTMLDataEntityToTable(string keyWord, string url, System.Nullable<System.DateTime> pubDate, string blobFile, string title) {
            WebCrawler.ASManager.AddHTMLDataEntityToTableRequest inValue = new WebCrawler.ASManager.AddHTMLDataEntityToTableRequest();
            inValue.keyWord = keyWord;
            inValue.url = url;
            inValue.pubDate = pubDate;
            inValue.blobFile = blobFile;
            inValue.title = title;
            WebCrawler.ASManager.AddHTMLDataEntityToTableResponse retVal = ((WebCrawler.ASManager.AzureStorageManagerSoap)(this)).AddHTMLDataEntityToTable(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WebCrawler.ASManager.AddHTMLDataEntityToTableResponse> WebCrawler.ASManager.AzureStorageManagerSoap.AddHTMLDataEntityToTableAsync(WebCrawler.ASManager.AddHTMLDataEntityToTableRequest request) {
            return base.Channel.AddHTMLDataEntityToTableAsync(request);
        }
        
        public System.Threading.Tasks.Task<WebCrawler.ASManager.AddHTMLDataEntityToTableResponse> AddHTMLDataEntityToTableAsync(string keyWord, string url, System.Nullable<System.DateTime> pubDate, string blobFile, string title) {
            WebCrawler.ASManager.AddHTMLDataEntityToTableRequest inValue = new WebCrawler.ASManager.AddHTMLDataEntityToTableRequest();
            inValue.keyWord = keyWord;
            inValue.url = url;
            inValue.pubDate = pubDate;
            inValue.blobFile = blobFile;
            inValue.title = title;
            return ((WebCrawler.ASManager.AzureStorageManagerSoap)(this)).AddHTMLDataEntityToTableAsync(inValue);
        }
        
        public int GetEntityCount(string PropertyName, string Value) {
            return base.Channel.GetEntityCount(PropertyName, Value);
        }
        
        public System.Threading.Tasks.Task<int> GetEntityCountAsync(string PropertyName, string Value) {
            return base.Channel.GetEntityCountAsync(PropertyName, Value);
        }
        
        public void IncrementPopularityCount(string url) {
            base.Channel.IncrementPopularityCount(url);
        }
        
        public System.Threading.Tasks.Task IncrementPopularityCountAsync(string url) {
            return base.Channel.IncrementPopularityCountAsync(url);
        }
        
        public void UpdateMachineCountersValue(double[] values) {
            base.Channel.UpdateMachineCountersValue(values);
        }
        
        public System.Threading.Tasks.Task UpdateMachineCountersValueAsync(double[] values) {
            return base.Channel.UpdateMachineCountersValueAsync(values);
        }
        
        public void UpdateCurrentlyCrawledUrlValue(string threadName, string url) {
            base.Channel.UpdateCurrentlyCrawledUrlValue(threadName, url);
        }
        
        public System.Threading.Tasks.Task UpdateCurrentlyCrawledUrlValueAsync(string threadName, string url) {
            return base.Channel.UpdateCurrentlyCrawledUrlValueAsync(threadName, url);
        }
        
        public void IncrementNumberOfCrawledUrls(string rowKey) {
            base.Channel.IncrementNumberOfCrawledUrls(rowKey);
        }
        
        public System.Threading.Tasks.Task IncrementNumberOfCrawledUrlsAsync(string rowKey) {
            return base.Channel.IncrementNumberOfCrawledUrlsAsync(rowKey);
        }
        
        public void UpdateThreadStatus(string rowKey, string status) {
            base.Channel.UpdateThreadStatus(rowKey, status);
        }
        
        public System.Threading.Tasks.Task UpdateThreadStatusAsync(string rowKey, string status) {
            return base.Channel.UpdateThreadStatusAsync(rowKey, status);
        }
        
        public void CreateBlobFile(string blobFileName, string content) {
            base.Channel.CreateBlobFile(blobFileName, content);
        }
        
        public System.Threading.Tasks.Task CreateBlobFileAsync(string blobFileName, string content) {
            return base.Channel.CreateBlobFileAsync(blobFileName, content);
        }
        
        public void DeleteAllMessagesFromQueue(string queueReference) {
            base.Channel.DeleteAllMessagesFromQueue(queueReference);
        }
        
        public System.Threading.Tasks.Task DeleteAllMessagesFromQueueAsync(string queueReference) {
            return base.Channel.DeleteAllMessagesFromQueueAsync(queueReference);
        }
        
        public void ResetAllNumberOfUrls() {
            base.Channel.ResetAllNumberOfUrls();
        }
        
        public System.Threading.Tasks.Task ResetAllNumberOfUrlsAsync() {
            return base.Channel.ResetAllNumberOfUrlsAsync();
        }
        
        public void DeleteBlobContainer() {
            base.Channel.DeleteBlobContainer();
        }
        
        public System.Threading.Tasks.Task DeleteBlobContainerAsync() {
            return base.Channel.DeleteBlobContainerAsync();
        }
        
        public void RecreateBlobContainer() {
            base.Channel.RecreateBlobContainer();
        }
        
        public System.Threading.Tasks.Task RecreateBlobContainerAsync() {
            return base.Channel.RecreateBlobContainerAsync();
        }
        
        public void DeleteTable() {
            base.Channel.DeleteTable();
        }
        
        public System.Threading.Tasks.Task DeleteTableAsync() {
            return base.Channel.DeleteTableAsync();
        }
        
        public void AddControlCommandToQueue(string command) {
            base.Channel.AddControlCommandToQueue(command);
        }
        
        public System.Threading.Tasks.Task AddControlCommandToQueueAsync(string command) {
            return base.Channel.AddControlCommandToQueueAsync(command);
        }
        
        public string RetrieveMachineCounters() {
            return base.Channel.RetrieveMachineCounters();
        }
        
        public System.Threading.Tasks.Task<string> RetrieveMachineCountersAsync() {
            return base.Channel.RetrieveMachineCountersAsync();
        }
        
        public string CountUrlInQueues() {
            return base.Channel.CountUrlInQueues();
        }
        
        public System.Threading.Tasks.Task<string> CountUrlInQueuesAsync() {
            return base.Channel.CountUrlInQueuesAsync();
        }
        
        public string CountCrawledUrls() {
            return base.Channel.CountCrawledUrls();
        }
        
        public System.Threading.Tasks.Task<string> CountCrawledUrlsAsync() {
            return base.Channel.CountCrawledUrlsAsync();
        }
        
        public int CountEntitiesInHTMLDataTable() {
            return base.Channel.CountEntitiesInHTMLDataTable();
        }
        
        public System.Threading.Tasks.Task<int> CountEntitiesInHTMLDataTableAsync() {
            return base.Channel.CountEntitiesInHTMLDataTableAsync();
        }
        
        public string GetThreadName() {
            return base.Channel.GetThreadName();
        }
        
        public System.Threading.Tasks.Task<string> GetThreadNameAsync() {
            return base.Channel.GetThreadNameAsync();
        }
        
        public string GetThreadStatus() {
            return base.Channel.GetThreadStatus();
        }
        
        public System.Threading.Tasks.Task<string> GetThreadStatusAsync() {
            return base.Channel.GetThreadStatusAsync();
        }
        
        public string GetCurrentlyCrawledUrl() {
            return base.Channel.GetCurrentlyCrawledUrl();
        }
        
        public System.Threading.Tasks.Task<string> GetCurrentlyCrawledUrlAsync() {
            return base.Channel.GetCurrentlyCrawledUrlAsync();
        }
        
        public string RetrieveLogReports() {
            return base.Channel.RetrieveLogReports();
        }
        
        public System.Threading.Tasks.Task<string> RetrieveLogReportsAsync() {
            return base.Channel.RetrieveLogReportsAsync();
        }
        
        public string RetrieveSearchResults(string keyword) {
            return base.Channel.RetrieveSearchResults(keyword);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveSearchResultsAsync(string keyword) {
            return base.Channel.RetrieveSearchResultsAsync(keyword);
        }
        
        public string GetContentFromBlobFile(string blockBlobReference) {
            return base.Channel.GetContentFromBlobFile(blockBlobReference);
        }
        
        public System.Threading.Tasks.Task<string> GetContentFromBlobFileAsync(string blockBlobReference) {
            return base.Channel.GetContentFromBlobFileAsync(blockBlobReference);
        }
    }
}
